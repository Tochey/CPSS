AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
    sammy

    Sample SAM Template for sammy

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 5
        MemorySize: 128
        Runtime: nodejs14.x
        Architectures:
            - x86_64
    Api:
        Cors:
            AllowMethods: "'GET,POST,OPTIONS'"
            AllowHeaders: "'Content-type'"
            AllowOrigin: "'*'"

Parameters:
    APPID:
        Type: String
        Description: Algolia App ID
    ADMINAPIKEY:
        Type: String
        Description: Algolia Admin API Key

Resources:
    # S3 Bucket to store primary submissions
    PrimarySubmissionBucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: primary-submission-bucket

    # S3 Bucket to store indexed submissions
    IndexedSubmissionBucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: indexed-submission-bucket
            CorsConfiguration:
                CorsRules:
                    - AllowedHeaders:
                          - "*"
                      AllowedMethods:
                          - PUT
                      AllowedOrigins:
                          - "*"

    IPreSigned:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            CodeUri: src/lambda/pre-signed/
            Handler: pre-signed.lambdaHandler
            Events:
                GetPreSignedUrl:
                    Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Path: /pre-signed
                        Method: get
            Policies:
                - S3WritePolicy:
                      BucketName: indexed-submission-bucket
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
                EntryPoints:
                    - pre-signed.ts
    ITransform:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            CodeUri: src/lambda/transform/
            Handler: transform.lambdaHandler
            Events:
                StudentUploadEvent:
                    Type: S3 # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Bucket: !Ref IndexedSubmissionBucket
                        Events:
                            - s3:ObjectCreated:*
            Policies:
                - LambdaInvokePolicy:
                      FunctionName: !Ref IUpload
                - S3ReadPolicy:
                      BucketName: indexed-submission-bucket

        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
                EntryPoints:
                    - transform.ts
    IUpload:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            CodeUri: src/lambda/upload/
            Handler: upload.lambdaHandler
            Environment:
                Variables:
                    APPID: !Ref APPID
                    ADMINAPIKEY: !Ref ADMINAPIKEY
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
                EntryPoints:
                    - upload.ts
    EventInvokeConfig:
        Type: AWS::Lambda::EventInvokeConfig
        Properties:
            FunctionName: !Ref ITransform
            Qualifier: $LATEST
            MaximumEventAgeInSeconds: 60
            MaximumRetryAttempts: 0
            DestinationConfig:
                OnSuccess:
                    Destination: !GetAtt IUpload.Arn
    IStudent:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: src/lambda/student/
            Handler: student.lambdaHandler
            Events:
                ExpressLambdaProxy:
                    Type: Api
                    Properties:
                        Path: '/student/{proxy+}'
                        Method: ANY
            # Policies:
            #     - DynamoDBCrudPolicy:
            #           TableName: !Ref StudentsTable
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                EntryPoints:
                    - app.ts
                    - student.ts

    IFacutly: 
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: src/lambda/faculty/
            Handler: faculty.lambdaHandler
            Events:
                ExpressLambdaProxy:
                    Type: Api
                    Properties:
                        Path: '/faculty/{proxy+}'
                        Method: ANY
        Metadata: # Manage esbuild properties
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
                EntryPoints:
                    - app.ts
                    - faculty.ts

Outputs:
    # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
    # Find out more about other implicit resources you can reference within SAM
    # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
    BeseAPiEndpoint:
        Description: "Base API Endpoint"
        Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
